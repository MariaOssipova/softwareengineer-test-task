<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Scoring.proto

namespace Scoring;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>scoring.PeriodRange</code>
 */
class PeriodRange extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.scoring.Period previous_period = 1;</code>
     */
    protected $previous_period = null;
    /**
     * Generated from protobuf field <code>.scoring.Period current_period = 2;</code>
     */
    protected $current_period = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Scoring\Period $previous_period
     *     @type \Scoring\Period $current_period
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Scoring::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.scoring.Period previous_period = 1;</code>
     * @return \Scoring\Period|null
     */
    public function getPreviousPeriod()
    {
        return isset($this->previous_period) ? $this->previous_period : null;
    }

    public function hasPreviousPeriod()
    {
        return isset($this->previous_period);
    }

    public function clearPreviousPeriod()
    {
        unset($this->previous_period);
    }

    /**
     * Generated from protobuf field <code>.scoring.Period previous_period = 1;</code>
     * @param \Scoring\Period $var
     * @return $this
     */
    public function setPreviousPeriod($var)
    {
        GPBUtil::checkMessage($var, \Scoring\Period::class);
        $this->previous_period = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.scoring.Period current_period = 2;</code>
     * @return \Scoring\Period|null
     */
    public function getCurrentPeriod()
    {
        return isset($this->current_period) ? $this->current_period : null;
    }

    public function hasCurrentPeriod()
    {
        return isset($this->current_period);
    }

    public function clearCurrentPeriod()
    {
        unset($this->current_period);
    }

    /**
     * Generated from protobuf field <code>.scoring.Period current_period = 2;</code>
     * @param \Scoring\Period $var
     * @return $this
     */
    public function setCurrentPeriod($var)
    {
        GPBUtil::checkMessage($var, \Scoring\Period::class);
        $this->current_period = $var;

        return $this;
    }

}

